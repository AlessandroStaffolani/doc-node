{
  "openapi": "3.0.0",
  "info": {
    "title": "Deamon Backup API",
    "description": "Deamon used to periodically generate volume's backup and send of this\nbackups",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:{port}/api/{version}",
      "description": "The host deamon backup API server",
      "variables": {
        "port": {
          "enum": [
            "5555"
          ],
          "default": "5555"
        },
        "version": {
          "enum": [
            "v1.0.0"
          ],
          "default": "v1.0.0"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "container",
      "description": "Containers API"
    },
    {
      "name": "volume",
      "description": "Volumes API"
    }
  ],
  "paths": {
    "/containers/list": {
      "get": {
        "tags": [
          "container"
        ],
        "summary": "Returns a list of active containers.",
        "description": "Allow to retrive all containers object that are running in the host machine (for additional information [Docker API Reference - container list](https://docs.docker.com/engine/api/v1.39/#operation/ContainerList))",
        "operationId": "containerListGET",
        "responses": {
          "200": {
            "description": "A JSON array of container objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "containers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Container"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/containers/{id}/backup": {
      "post": {
        "tags": [
          "container"
        ],
        "summary": "Create backup of the container passed by Id.",
        "description": "Create a backup file for each volumes mounted in the container",
        "operationId": "containerBackupPOST",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id of the container in which perform the volumes backup",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON array of backup object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "backups": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Backup"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Container ID is required and must be a string",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "A container with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    },
    "/volumes/list": {
      "get": {
        "tags": [
          "volume"
        ],
        "summary": "Returns a list of all volumes",
        "description": "Allow to retrive all volume objects that are in the host machine (for additional information [Docker API Reference - volume list](https://docs.docker.com/engine/api/v1.39/#operation/VolumeList))",
        "operationId": "volumesListGET",
        "responses": {
          "200": {
            "description": "A JSON array of volume object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "volumes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Volume"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/UnexpectedError"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "UnexpectedError": {
        "description": "Unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "Port": {
        "type": "object",
        "description": "An open port on a container",
        "required": [
          "PrivatePort",
          "Type"
        ],
        "properties": {
          "IP": {
            "type": "string",
            "format": "ip-address",
            "description": "Host IP address that the container's port is mapped to"
          },
          "PrivatePort": {
            "type": "integer",
            "format": "uint16",
            "x-nullable": false,
            "description": "Port on the container"
          },
          "PublicPort": {
            "type": "integer",
            "format": "uint16",
            "description": "Port exposed on the host"
          },
          "Type": {
            "type": "string",
            "x-nullable": false,
            "enum": [
              "tcp",
              "udp",
              "sctp"
            ]
          }
        },
        "example": {
          "PrivatePort": 8080,
          "PublicPort": 80,
          "Type": "tcp"
        }
      },
      "EndpointIPAMConfig": {
        "description": "EndpointIPAMConfig represents an endpoint's IPAM configuration.",
        "type": "object",
        "x-nullable": true,
        "properties": {
          "IPv4Address": {
            "type": "string",
            "example": "172.20.30.33"
          },
          "IPv6Address": {
            "type": "string",
            "example": "2001:db8:abcd::3033"
          },
          "LinkLocalIPs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "169.254.34.68",
              "fe80::3468"
            ]
          }
        }
      },
      "EndpointSettings": {
        "description": "Configuration for a network endpoint.",
        "type": "object",
        "properties": {
          "IPAMConfig": {
            "$ref": "#/components/schemas/EndpointIPAMConfig"
          },
          "Links": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "container_1",
              "container_2"
            ]
          },
          "Aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "server_x",
              "server_y"
            ]
          }
        }
      },
      "Mount": {
        "type": "object",
        "properties": {
          "Target": {
            "description": "Container path.",
            "type": "string"
          },
          "Source": {
            "description": "Mount source (e.g. a volume name, a host path).",
            "type": "string"
          },
          "Type": {
            "description": "The mount type. Available types:\n\n- `bind` Mounts a file or directory from the host into the container. Must exist prior to creating the container.\n- `volume` Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are **not** removed when the container is removed.\n- `tmpfs` Create a tmpfs with the given options. The mount source cannot be specified for tmpfs.\n",
            "type": "string",
            "enum": [
              "bind",
              "volume",
              "tmpfs"
            ]
          },
          "ReadOnly": {
            "description": "Whether the mount should be read-only.",
            "type": "boolean"
          },
          "Consistency": {
            "description": "The consistency requirement for the mount: `default`, `consistent`,\n`cached`, or `delegated`.",
            "type": "string"
          },
          "BindOptions": {
            "description": "Optional configuration for the `bind` type.",
            "type": "object",
            "properties": {
              "Propagation": {
                "description": "A propagation mode with the value `[r]private`, `[r]shared`,\nor `[r]slave`.",
                "type": "string",
                "enum": [
                  "private",
                  "rprivate",
                  "shared",
                  "rshared",
                  "slave",
                  "rslave"
                ]
              }
            }
          },
          "VolumeOptions": {
            "description": "Optional configuration for the `volume` type.",
            "type": "object",
            "properties": {
              "NoCopy": {
                "description": "Populate volume with data from the target.",
                "type": "boolean",
                "default": false
              },
              "Labels": {
                "description": "User-defined key/value metadata.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "DriverConfig": {
                "description": "Map of driver specific options",
                "type": "object",
                "properties": {
                  "Name": {
                    "description": "Name of the driver to use to create the volume.",
                    "type": "string"
                  },
                  "Options": {
                    "description": "key/value map of driver specific options.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "TmpfsOptions": {
            "description": "Optional configuration for the `tmpfs` type.",
            "type": "object",
            "properties": {
              "SizeBytes": {
                "description": "The size for the tmpfs mount in bytes.",
                "type": "integer",
                "format": "int64"
              },
              "Mode": {
                "description": "The permission mode for the tmpfs mount in an integer.",
                "type": "integer"
              }
            }
          }
        }
      },
      "Container": {
        "type": "object",
        "properties": {
          "Id": {
            "description": "The ID of this container",
            "type": "string"
          },
          "Names": {
            "description": "The names that this container has been given",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Image": {
            "description": "The name of the image used when creating this container",
            "type": "string"
          },
          "ImageID": {
            "description": "The ID of the image that this container was created from",
            "type": "string"
          },
          "Command": {
            "description": "Command to run when starting the container",
            "type": "string"
          },
          "Created": {
            "description": "When the container was created",
            "type": "integer",
            "format": "int64"
          },
          "Ports": {
            "description": "The ports exposed by this container",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Port"
            }
          },
          "SizeRw": {
            "description": "The size of files that have been created or changed by this\ncontainer",
            "type": "integer",
            "format": "int64"
          },
          "SizeRootFs": {
            "description": "The total size of all the files in this container",
            "type": "integer",
            "format": "int64"
          },
          "Labels": {
            "description": "User-defined key/value metadata.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "State": {
            "description": "The state of this container (e.g. `Exited`)",
            "type": "string"
          },
          "Status": {
            "description": "Additional human-readable status of this container (e.g. `Exit\n0`)",
            "type": "string"
          },
          "HostConfig": {
            "type": "object",
            "properties": {
              "NetworkMode": {
                "type": "string"
              }
            }
          },
          "NetworkSettings": {
            "description": "A summary of the container's network settings",
            "type": "object",
            "properties": {
              "Networks": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EndpointSettings"
                }
              }
            }
          },
          "Mounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mount"
            }
          }
        }
      },
      "Volume": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of the volume."
          },
          "Driver": {
            "type": "string",
            "description": "Name of the volume driver used by the volume."
          },
          "Mountpoint": {
            "type": "string",
            "description": "Mount path of the volume on the host."
          },
          "CreatedAt": {
            "type": "string",
            "format": "dateTime",
            "description": "Date/Time the volume was created."
          },
          "Status": {
            "type": "object",
            "description": "Low-level details about the volume, provided by the volume driver.\nDetails are returned as a map with key/value pairs:\n`{\"key\":\"value\",\"key2\":\"value2\"}`.\n\nThe `Status` field is optional, and is omitted if the volume driver\ndoes not support this feature.\n",
            "additionalProperties": {
              "type": "object"
            }
          },
          "Labels": {
            "type": "object",
            "description": "User-defined key/value metadata.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "Scope": {
            "type": "string",
            "description": "The level at which the volume exists. Either `global` for cluster-wide,\nor `local` for machine level.",
            "default": "local",
            "enum": [
              "local",
              "global"
            ]
          },
          "Options": {
            "type": "object",
            "description": "The driver specific options used when creating the volume.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "UsageData": {
            "type": "object",
            "required": [
              "Size",
              "RefCount"
            ],
            "description": "Usage details about the volume. This information is used by the\n`GET /system/df` endpoint, and omitted in other endpoints.\n",
            "properties": {
              "Size": {
                "type": "integer",
                "default": -1,
                "description": "Amount of disk space used by the volume (in bytes). This information\nis only available for volumes created with the `\"local\"` volume\ndriver. For volumes created with other volume drivers, this field\nis set to `-1` (\"not available\")\n"
              },
              "RefCount": {
                "type": "integer",
                "default": -1,
                "description": "The number of containers referencing this volume. This field\nis set to `-1` if the reference-count is not available.\n"
              }
            }
          }
        },
        "example": {
          "Name": "tardis",
          "Driver": "custom",
          "Mountpoint": "/var/lib/docker/volumes/tardis",
          "Status": {
            "hello": "world"
          },
          "Labels": {
            "com.example.some-label": "some-value",
            "com.example.some-other-label": "some-other-value"
          },
          "Scope": "local",
          "CreatedAt": "2016-06-07T20:31:11.853781916Z"
        }
      },
      "Backup": {
        "type": "object",
        "properties": {
          "containerName": {
            "type": "string",
            "description": "Name of the container backuped"
          },
          "backupName": {
            "type": "string",
            "description": "Name of the backup file"
          },
          "createdAt": {
            "type": "string",
            "format": "dateTime",
            "description": "Date/Time the backup was created."
          },
          "hostname": {
            "type": "string",
            "description": "Host from where the backup was created."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}